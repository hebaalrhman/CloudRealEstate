/*
 * File: app/controller/Menu.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CloudRealEstate.controller.Menu', {
    extend: 'Ext.app.Controller',

    models: [
        'menu.Item',
        'menu.Root'
    ],
    stores: [
        'Menu'
    ],
    views: [
        'menu.Accordion',
        'menu.Item'
    ],

    refs: [
        {
            ref: 'mainPanel',
            selector: 'mainpanel'
        }
    ],

    init: function(application) {
        this.control({
            "mainmenu":{
                render:this.onPanelRender

            },
            "mainmenuitem":{
                 itemclick: this.onTreepanelItemClick

            }
        });
    },

    onPanelRender: function(abstractcomponent, options) {
        this.getMenuStore().load(function(records, op, success){
              var menuPanel = Ext.ComponentQuery.query('mainmenu')[0];

            Ext.each(records, function(root){

                     var menu = Ext.create('CloudRealEstate.view.menu.Item',{
                            title: translations[root.get('text')],
                            iconCls: root.get('iconCls')
                        });

                Ext.each(root.items(), function(itens){

                    Ext.each(itens.data.items, function(item){

                      menu.getRootNode().appendChild({
                                    text: translations[item.get('text')],
                                    leaf: true,
                                    iconCls: item.get('iconCls'),
                                    id: item.get('id'),
                                    className: item.get('className')
                                });

                    });


                });
                 menuPanel.add(menu);
            });
        });
    },

    onTreepanelItemClick: function(view, record, item, index, event, options) {

  //      console.log("rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr");
     //   console.log(record);
       /* if(record.raw.className === 'addservicorder'){
            new Ext.create('Transport.view.ServiceOrder');
        }else{}*/
        var mainPanel = this.getMainPanel();
         var newTab = mainPanel.items.findBy(
         function (tab){
                    return tab.title === record.get('text');
                }
         );
          if (!newTab){
                    newTab = mainPanel.add({
                        xtype: record.raw.className,
                        closable: true,
                        iconCls: record.get('iconCls'),
                        title: record.get('text')
                    });
                }
          mainPanel.setActiveTab(newTab);
    }

});
